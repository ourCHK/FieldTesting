apply plugin: 'com.android.application'

android {

    signingConfigs {
        config {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('platform.keystore')
            storePassword 'android'
        }
    }

    lintOptions{
        abortOnError false
    }
/*    configurations.all {
        resolutionStrategy {
            force 'com.android.support:support-annotations:25.3.1'
            force 'com.google.code.findbugs:jsr305:2.0.1'
        }
    }*/
    compileSdkVersion 25
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "com.gionee.autotest.field"
        // We have to set this to 22, because signal recording dependency it
        minSdkVersion 22
        targetSdkVersion 25
        versionCode 1
        versionName "V1.03.22L"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.config
    }
    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release{
            signingConfig signingConfigs.config
        }

        applicationVariants.all{
            variant ->
                variant.outputs.each{
                    output ->
                       if (variant.buildType.name == "release" && variant.productFlavors[0].name == "normal"){
                           def apk = output.outputFile
                           output.outputFile = new File(apk.parent,
                                   "FieldTesting_${variant.versionName}_${variant.productFlavors[0].name}.apk")
                       }else if (variant.buildType.name == "release" && variant.productFlavors[0].name == "system"){
                           def apk = output.outputFile
                           output.outputFile = new File(apk.parent,
                                   "FieldTesting_${variant.versionName}_${variant.productFlavors[0].name}.apk")
                       }
                }
        }
    }
    productFlavors{
        normal{
            applicationId "com.gionee.autotest.field.normal"
        }

        system{
            applicationId "com.gionee.autotest.field.system"
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:25.4.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    //latest android-common-util
    compile 'com.gionee.autotest.android.common:android-common-utility:1.0.8.beta2'
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'com.android.support:recyclerview-v7:25.4.0'
    compile 'com.android.support:cardview-v7:25.4.0'
    compile 'com.android.support:gridlayout-v7:25.4.0'
    compile 'com.android.support:design:25.4.0'
    compile 'com.google.code.gson:gson:2.8.1'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex.rxjava2:rxjava:2.1.5'
    // https://mvnrepository.com/artifact/net.sourceforge.jexcelapi/jxl
    compile 'net.sourceforge.jexcelapi:jxl:2.6.12'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile 'commons-io:commons-io:2.6'
    compile 'com.android.support:preference-v7:25.4.0'
    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:1.0.0'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.0'
    compile 'com.klinkerapps:android-smsmms:4.2.3'
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'com.squareup.okio:okio:1.5.0'
    //    compile(name: 'coreprogress-0.0.3', ext: 'aar')
//    compile 'cn.edu.zafu:coreprogress:+'
}
